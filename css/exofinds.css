@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;0,500;0,600;0,700;0,900;1,300;1,400;1,500;1,600;1,700;1,900&display=swap");
:root {
  --regular: "Roboto", Arial, Helvetica, sans-serif;
  --title: "OTF", cursive;
  --subtitle: "SGK", Times, serif;
  --primary-color: #655066;
  --secondary-color: #652F21;
  --light-gray: #e6e6e6;
  --medium-gray: #cacaca;
  --dark-gray: #8a8a8a;
  --black: #171717;
  --white: #F6F6F6;
  --post-size: 50rem;
  --sidebar-img: true;
}

@font-face {
  font-family: "OTF";
  src: url(../fonts/OTF.woff);
}
@font-face {
  font-family: "SGK";
  src: url(../fonts/SGK.woff);
}
/**************************************************************************************************************************************************************************************/
/**************************************************************************************************************************************************************************************/
/************************************************************************ FROM CSS TO SASS ********************************************************************************************/
/**************************************************************************************************************************************************************************************/
/**************************************************************************************************************************************************************************************/
/**************************************************************************************************************************************************************************************/
/**************************************************************************************************************************************************************************************/
/******************************************************************************** INIT ************************************************************************************************/
/**************************************************************************************************************************************************************************************/
/**************************************************************************************************************************************************************************************/
.btn_all {
  font-size: 1em;
  font-weight: bold;
  text-transform: uppercase;
  padding: 1rem 1.5rem;
  background: -webkit-gradient(linear, left top, right top, from(var(--secondary-color)), to(var(--primary-color)));
  background: linear-gradient(90deg, var(--secondary-color), var(--primary-color));
  color: var(--white);
  letter-spacing: 0.1em;
  border-radius: 0.4rem;
  position: relative;
  overflow: hidden;
  z-index: 0;
}
.btn_all::before {
  content: "";
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: -webkit-gradient(linear, right top, left top, from(var(--secondary-color)), to(var(--primary-color)));
  background: linear-gradient(-90deg, var(--secondary-color), var(--primary-color));
  -webkit-transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
  transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
  z-index: -1;
  opacity: 0;
}
.btn_all span {
  z-index: 1;
}
.btn_all:is(:hover, :focus) {
  color: var(--white);
}
.btn_all:is(:hover, :focus)::before {
  opacity: 1;
}

button {
  -webkit-box-shadow: none;
          box-shadow: none;
  border: 0;
  font-family: var(--regular);
  outline: none !important;
  cursor: pointer;
  background-color: transparent;
  color: var(--white);
}

#s-m-t-tooltip {
  position: absolute;
  z-index: 9999999;
  margin-top: 5px;
  margin-left: 10px;
  display: block;
  padding: 2px 5px !important;
  background-color: var(--black);
  font-weight: bold;
  font-family: var(--regular);
  font-size: 7px !important;
  color: var(--white);
  letter-spacing: 0.1em;
  text-transform: uppercase;
  -webkit-box-shadow: none !important;
          box-shadow: none !important;
}

header {
  background: -webkit-gradient(linear, left top, right top, from(var(--secondary-color)), to(var(--primary-color)));
  background: linear-gradient(90deg, var(--secondary-color), var(--primary-color));
  padding: 0.5rem 5rem;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 3.5rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  z-index: 90;
}
header .left_side {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
header .left_side > img {
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 0.4rem;
}
header .left_side h1 {
  color: var(--white);
  font-size: 1.2em;
  margin: 0 0 0 1.5rem;
}

iframe.tmblr-iframe--unified-controls {
  z-index: 999999999 !important;
  position: fixed;
  top: 0.1rem;
  right: 1.5rem;
  -webkit-transform: scale(0.6);
          transform: scale(0.6);
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

/*----- SIDEBAR -----*/
#sidebar {
  width: 25rem;
  position: fixed;
  top: 15rem;
}
#sidebar .title {
  font-family: var(--title);
  text-align: center;
}
#sidebar .title a {
  color: var(--primary-color);
}
#sidebar .description {
  text-align: justify;
}

.sidebar_img {
  display: block;
}

article.post {
  width: var(--post-size);
  position: relative;
  margin-bottom: 10rem;
  padding: 0;
  background-color: transparent;
}

.post * {
  max-width: 100%;
}

a.pinned {
  font-weight: bold;
  color: var(--secondary-color);
}

.body {
  margin-top: 2em;
  list-style-type: none;
}
.body:first-of-type {
  margin-top: 0;
}

.avatar_icon {
  display: inline-block;
  vertical-align: middle;
  width: 2em;
  height: 2em;
  margin-right: 1em;
  border-radius: 50%;
}

.username {
  display: inline-block;
  vertical-align: middle;
  font-weight: bold;
}
.username.deactived::after {
  content: "(deactivated)";
  margin-left: 1em;
  opacity: 0.75;
  color: var(--dark-gray);
}

b {
  font-weight: 600;
  color: var(--primary-color);
}

i {
  font-style: italic;
  color: var(--secondary-color);
}

strike {
  text-decoration: line-through;
}

.link_container {
  border: 1px solid var(--medium-gray);
  position: relative;
}
.link_container a.title::before {
  content: "";
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}
.link_container .link {
  padding: 2em;
}
.link_container .link .host, .link_container .link .txt {
  margin-top: 1.5em;
  display: block;
}

.photo img {
  width: 100%;
}

.vignette, #vignette {
  opacity: 0;
}

.tmblr-lightbox, #tumblr_lightbox {
  background-color: rgba(var(--dark-gray), 0.75) !important;
}

.lightbox-image, #tumblr_lightbox img {
  -webkit-box-shadow: none !important;
          box-shadow: none !important;
  border-radius: 0 !important;
  max-width: none;
}

#tumblr_lightbox_caption, .lightbox-caption {
  color: var(--white) !important;
  font-family: inherit;
  margin-top: 1em !important;
}

.post-content div.npf_row, .post div.npf_row, body div.npf_row {
  margin-left: 0 !important;
  margin-right: 0 !important;
}

.quote {
  line-height: 160%;
  font-size: 1.25em;
}
.quote p:first-of-type {
  margin-top: 0;
}
.quote p:last-of-type {
  margin-bottom: 0;
}

.source_quote {
  margin-top: 1.5em;
}

.chat {
  padding: 0;
  margin: 0;
}
.chat li {
  list-style-type: none;
  margin-top: 1em;
}
.chat li:first-of-type {
  margin-top: 0;
}

.chatter {
  font-weight: 600;
}

.question {
  border-bottom: 1px solid var(--medium-gray);
  padding-bottom: 2em;
}
.question .asking {
  display: inline-block;
  margin-left: 1em;
  font-weight: bold;
}

.audio {
  padding: 2em;
  border: 1px solid var(--medium-gray);
}
.audio .album_cover {
  z-index: 1;
  display: inline-block;
  vertical-align: middle;
  float: left;
  width: 100px;
  height: 100px;
}
.audio .audio-player-wrap {
  width: 100px;
  height: 100px;
  display: inline-block;
}
.audio .button {
  width: 30px;
  height: 30px;
  overflow: hidden;
  position: relative;
  z-index: 2;
  margin: 7px;
}
.audio .audio_container {
  background-color: var(--white);
  z-index: 3;
  position: absolute;
  margin: 28px 0 0 28px;
  border-radius: 50%;
}
.audio .audio_infos {
  display: inline-block;
  height: 100px;
  max-width: calc(100% - 100px);
  margin-left: 100px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding-left: 2em;
}
.audio .audio_infos li {
  list-style-type: none;
}
.audio .track {
  font-weight: 600;
}

/*----- INFO -----*/
.infos {
  margin-top: 2em;
}
.infos a {
  display: inline-block;
  vertical-align: middle;
}

.likeb {
  position: relative;
  display: inline-block;
  height: 1.6em;
  margin-bottom: -1px;
}

.likeb .like_button iframe {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 2;
  opacity: 0;
}

.like_button iframe {
  width: 100% !important;
  height: 100% !important;
}

.likeb .liked + .actual-button {
  color: var(--primary-color);
}

.likeb .liked + .actual-button:after {
  content: "d";
}

.info a, .tags a {
  margin-right: 0.75em;
}

/*---- POST NOTES -----*/
.notes_container ol.notes {
  max-width: 100%;
  padding: 0;
  margin: 2em 0 0 0;
}
.notes_container ol.notes li.note {
  padding: 0.5em 0;
  list-style-type: none;
}
.notes_container ol.notes li.note img.avatar {
  margin-right: 1em;
  vertical-align: middle;
  display: inline-block;
  width: 1.25em;
  height: 1.25em;
}

nav {
  margin-top: 1.25em;
}
nav ul, nav li {
  padding: 0;
  margin: 0;
  list-style-type: none;
}
nav a {
  color: var(--primary-color);
}

/*---- PAGINATION -----*/
#page-navigation {
  text-align: center;
}

#page-navigation a, .current-page {
  margin: 0 0.5em;
}

.current-page {
  font-weight: bold;
  color: var(--secondary-color);
}

/*---- CREDIT -----*/
#credit {
  position: fixed;
  bottom: 2rem;
  right: 2rem;
  font-size: 1.5em;
}

#directory {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse;
  padding: 0 5rem;
  height: 100vh;
  background-image: url("../../assets/img/directory/bg.jpg");
}
#directory #filters {
  width: 44.5rem;
  position: fixed;
  top: 0;
  right: 5rem;
  height: 100%;
  overflow: auto;
}
#directory #filters .resume {
  background: -webkit-gradient(linear, left top, right top, from(var(--secondary-color)), to(var(--primary-color)));
  background: linear-gradient(90deg, var(--secondary-color), var(--primary-color));
  padding: 1rem 1.5rem;
  color: var(--white);
  text-transform: uppercase;
  font-size: 1em;
  font-weight: bold;
  margin: 5rem 0 0 0;
  border-radius: 0.4rem;
}
#directory #filters .search_fc {
  z-index: 0;
  position: relative;
  margin-top: 2rem;
}
#directory #filters .search_fc::after {
  content: "";
  display: block;
  position: absolute;
  width: 1.5rem;
  height: 1.5rem;
  top: calc(50% - 0.75rem);
  left: 1.5rem;
  background-image: url("../img/directory/search.png");
  background-repeat: no-repeat;
  background-position: center center;
  background-size: contain;
  z-index: 2;
}
#directory #filters .searchfc {
  background: -webkit-gradient(linear, left top, right top, from(var(--secondary-color)), to(var(--primary-color)));
  background: linear-gradient(90deg, var(--secondary-color), var(--primary-color));
  border: 0;
  outline: none !important;
  color: var(--white);
  text-transform: uppercase;
  font-size: 1em;
  font-weight: bold;
  padding: 1rem 1.5rem 1rem 4.5rem;
  z-index: -1;
  width: 100%;
  border-radius: 0.4rem;
}
#directory #filters .select {
  margin-top: 2rem;
}
#directory #filters .select > div {
  margin-bottom: 2rem;
}
#directory #filters .select > div > button {
  font-size: 1em;
  text-transform: uppercase;
  color: var(--white);
  background: -webkit-gradient(linear, left top, right top, from(var(--secondary-color)), to(var(--primary-color)));
  background: linear-gradient(90deg, var(--secondary-color), var(--primary-color));
  padding: 0.5rem;
  -webkit-box-shadow: none;
          box-shadow: none;
  border: 0;
  font-weight: bold;
  letter-spacing: 0.1em;
  font-family: var(--regular);
  position: relative;
  display: inline-block;
  vertical-align: middle;
  border-radius: 0.4rem;
  -webkit-transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
  transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
}
#directory #filters .select > div > button.opened {
  border-radius: 0.4rem 0.4rem 0 0;
}
#directory #filters .select > div > button::after {
  content: "";
  display: inline-block;
  width: 1.2rem;
  height: 0.8rem;
  vertical-align: middle;
  background-image: url("../img/directory/chevron.png");
  margin-left: 0.5rem;
  background-position: center center;
  background-size: contain;
  -webkit-transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
  transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
}
#directory #filters .select > div > button:is(:hover, :focus)::after {
  -webkit-transform: scale(1.1);
          transform: scale(1.1);
}
#directory #filters .select > div > button.opened::after {
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}
#directory #filters .select > div > button.opened:is(:hover, :focus)::after {
  -webkit-transform: rotate(180deg) scale(1.1);
          transform: rotate(180deg) scale(1.1);
}
#directory #filters .select .button-group {
  margin: 0;
  padding: 0;
  border: 0.1rem solid rgba(255, 255, 255, 0.2);
  border-radius: 0 0.4rem 0.4rem 0.4rem;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  padding: 1rem 1.5rem;
  display: none;
}
#directory #filters .select .button-group li {
  margin-right: 1.5rem;
}
#directory #filters .select .button-group button {
  padding: 0;
  text-transform: uppercase;
  font-weight: bold;
  font-size: 1em;
  letter-spacing: 0.1em;
  -webkit-transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
  transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
  position: relative;
  display: inline-block;
}
#directory #filters .select .button-group button::before {
  content: "";
  display: block;
  position: absolute;
  width: 0;
  height: 0.1rem;
  bottom: 0;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  background-color: var(--white);
  -webkit-transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
  transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
}
#directory #filters .select .button-group button:is(:hover, :focus)::before,
#directory #filters .select .button-group button.this::before {
  width: 100%;
}
#directory #filters .select button.opened + .button-group {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
#directory .fc_liste {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  padding-right: 5rem;
  margin-right: 50rem;
  padding-bottom: 5rem;
  height: 100%;
  width: 100%;
  overflow: auto;
}
#directory .list_item {
  position: relative;
  width: 22rem;
  height: 35rem;
  z-index: 0;
  border-radius: 0.4rem;
  overflow: hidden;
  margin-top: 5rem;
}
#directory .list_item .img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
}
#directory .list_item .img img {
  width: 100%;
  height: calc(100% + 1rem);
  -o-object-fit: cover;
     object-fit: cover;
  -webkit-transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
  transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
}
#directory .list_item .txt {
  height: 100%;
  padding: 1.5rem 1rem;
}
#directory .list_item .txt::before {
  content: "";
  display: block;
  position: absolute;
  width: 100%;
  height: 50%;
  bottom: 0;
  left: 0;
  background: -webkit-gradient(linear, left top, left bottom, from(transparent), to(var(--black)));
  background: linear-gradient(180deg, transparent, var(--black));
  z-index: -1;
  -webkit-transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
  transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
}
#directory .list_item .txt > div {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: reverse;
      -ms-flex-direction: column-reverse;
          flex-direction: column-reverse;
  -webkit-transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
  transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
  position: absolute;
  left: 1.5rem;
  bottom: 1rem;
  max-width: calc(100% - 3rem);
}
#directory .list_item .txt h2 {
  font-size: 2em;
  color: var(--white);
  line-height: 1.2;
  margin: 0;
}
#directory .list_item .txt .subtitle {
  font-family: var(--subtitle);
  font-size: 1.2em;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  line-height: 1;
  margin: 0 0 0.5rem 0;
  color: var(--white);
}
#directory .list_item .txt ul.infos {
  margin: 0;
  padding: 0;
  max-width: 50%;
  position: absolute;
  left: 1.5rem;
  bottom: 0;
  -webkit-transform: translateY(100%);
          transform: translateY(100%);
  -webkit-transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
  transition: 0.3s cubic-bezier(0.19, 1, 0.22, 1);
}
#directory .list_item .txt ul li {
  color: var(--white);
  text-transform: uppercase;
  font-size: 1em;
  line-height: 1.2;
  font-weight: bold;
  letter-spacing: 0.1em;
}
#directory .list_item .txt ul li.eth {
  margin-top: 1.5rem;
}
#directory .list_item .txt .btn_all {
  margin: 0 auto;
  position: absolute;
  left: 50%;
  bottom: 0;
  -webkit-transform: translate(-50%, 100%);
          transform: translate(-50%, 100%);
}
#directory .list_item:is(:hover, :focus) img {
  -webkit-transform: translateY(-1rem);
          transform: translateY(-1rem);
}
#directory .list_item:is(:hover, :focus) .txt > div {
  bottom: 100%;
  -webkit-transform: translateY(calc(100% + 1rem));
          transform: translateY(calc(100% + 1rem));
}
#directory .list_item:is(:hover, :focus) .txt::before {
  height: 150%;
}
#directory .list_item:is(:hover, :focus) ul.infos {
  bottom: 50%;
  -webkit-transform: translateY(50%);
          transform: translateY(50%);
}
#directory .list_item:is(:hover, :focus) .btn_all {
  bottom: 4rem;
  -webkit-transform: translate(-50%, 0);
          transform: translate(-50%, 0);
}
#directory #openFilters {
  display: none;
}

@media only screen and (max-width: 1100px) {
  main {
    width: 500px;
  }

  #sidebar {
    position: relative;
    margin: 150px auto;
    width: 100%;
    top: auto;
  }

  section {
    margin-left: 0;
  }

  #directory .fc_liste {
    margin-right: 35rem;
  }

  #directory #filters {
    width: 30rem;
  }
}
@media only screen and (max-width: 800px) {
  main, section {
    width: 80vw;
  }

  #directory {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    padding: 0;
    height: auto;
  }
  #directory .fc_liste {
    margin: 0;
    padding: 0 5rem;
  }
  #directory #filters {
    position: sticky;
    width: 100%;
    padding: 0 5rem 3rem 5rem;
    z-index: 50;
    background-color: var(--black);
    overflow: visible;
  }
  #directory #filters .select {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    position: relative;
    overflow: hidden;
    height: 0;
  }
  #directory #filters .select > div {
    width: 50%;
    display: block;
  }
  #directory #filters .select > div:nth-of-type(odd) {
    padding-right: 1rem;
  }
  #directory #filters .select.opened {
    height: auto;
  }
  #directory #openFilters {
    display: block;
    position: absolute;
    bottom: 0;
    left: 50%;
    -webkit-transform: translate(-50%, 50%);
            transform: translate(-50%, 50%);
  }
}
/*----- BASIC STYLING -----*/
:root {
  font-size: 10px;
}

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

body {
  font-family: var(--regular);
  font-size: 100%;
  color: var(--black);
  background-color: var(--white);
  line-height: 1.4;
  word-wrap: break-word;
  margin: 0;
  padding: 0;
}

a {
  color: var(--dark-gray);
  text-decoration: none;
  -webkit-transition: all 0.3s cubic-bezier(0.19, 1, 0.22, 1);
  transition: all 0.3s cubic-bezier(0.19, 1, 0.22, 1);
  font-size: 1em;
}
a:hover {
  color: var(--primary-color);
}

h1, h2, h3, h4, h5, .title {
  font-family: var(--title);
  font-weight: bold;
  font-style: initial;
  color: var(--primary-color);
  line-height: 1.6;
  margin-bottom: 1.5rem;
}

h1 {
  font-size: 3rem;
}

h2 {
  font-size: 2.8rem;
}

h3 {
  font-size: 2.5rem;
}

h4 {
  font-size: 2rem;
}

h5 {
  font-size: 1.8rem;
}

small {
  font-size: 80%;
}

big {
  font-size: 1.1em;
}

ol, ul {
  margin-bottom: 1rem;
  list-style-type: none;
  list-style-position: outside;
}
ol li, ul li {
  line-height: 1.6;
}

hr {
  height: 0;
  border: 1px solid var(--medium-gray);
  -webkit-box-shadow: none;
          box-shadow: none;
  background-color: var(--medium-gray);
  width: 75rem;
  margin: 1.25rem auto;
}

pre {
  line-height: inherit;
  font-size: inherit;
  white-space: pre-wrap;
  word-wrap: break-word;
}

main {
  position: relative;
  width: 100%;
  margin: auto;
  padding-top: 3.5rem;
}

section {
  position: relative;
  width: var(--post-size);
  margin-left: 40rem;
}

img {
  margin: 0;
  display: block;
  height: auto;
  max-width: 100%;
}

figure {
  margin-left: 0;
  margin-right: 0;
}

/* width */
::-webkit-scrollbar {
  width: 1rem;
}

/* Track */
::-webkit-scrollbar-track {
  background: var(--black);
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: -webkit-gradient(linear, left top, left bottom, from(var(--secondary-color)), to(var(--primary-color)));
  background: linear-gradient(180deg, var(--secondary-color), var(--primary-color));
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
